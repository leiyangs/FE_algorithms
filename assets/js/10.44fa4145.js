(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{196:function(_,t,v){"use strict";v.r(t);var a=v(6),l=Object(a.a)({},(function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"什么是队列"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是队列"}},[_._v("#")]),_._v(" 什么是队列")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("队列是一片连续的存储区，可以存储任意元素")])]),_._v(" "),v("li",[v("p",[_._v("可以是数组，也可以是链表")])]),_._v(" "),v("li",[v("p",[_._v("有两个指针")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("头指针：通常只想第一个元素")])]),_._v(" "),v("li",[v("p",[_._v("尾指针：通常指最后一个元素的下一位")])]),_._v(" "),v("li",[v("p",[_._v("左闭右开，尾指针处不存值(数据动画)，尾-头=元素数量")])])])])]),_._v(" "),v("h2",{attrs:{id:"_1-出队-入队"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-出队-入队"}},[_._v("#")]),_._v(" 1. 出队，入队")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("出队：头指针向后移动一步")])]),_._v(" "),v("li",[v("p",[_._v("尾指针向后移动一步并把元素放进来")])])]),_._v(" "),v("h2",{attrs:{id:"_2-假溢出"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-假溢出"}},[_._v("#")]),_._v(" 2. 假溢出")]),_._v(" "),v("ul",[v("li",[_._v("还有空间，并不是真的溢出，只是尾指针走到了最后一位")])]),_._v(" "),v("h2",{attrs:{id:"_3-循环队列"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-循环队列"}},[_._v("#")]),_._v(" 3. 循环队列")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("头尾指针移动规则：走到末尾再从头开始")])]),_._v(" "),v("li",[v("p",[_._v("为了有效的利用空间")])])]),_._v(" "),v("h2",{attrs:{id:"_4-应用场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-应用场景"}},[_._v("#")]),_._v(" 4. 应用场景")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("CPU 超线程技术")])]),_._v(" "),v("li",[v("p",[_._v("线程池的任务对列")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("当有任务提交到线程池，线程池首先会根据核心线程数创建线程来处理这些任务")])]),_._v(" "),v("li",[v("p",[_._v("如果核心线程处理不过来，就放到一个阻塞对列等待，这里就用到了对列这种数据结构")])])])]),_._v(" "),v("li",[v("p",[_._v("js 事件环")]),_._v(" "),v("ul",[v("li",[_._v("宏任务同步代码 -> 微任务(对列) -> 宏任务(对列，一个任务) -> 微任务(一个对列)")])])])])])}),[],!1,null,null,null);t.default=l.exports}}]);